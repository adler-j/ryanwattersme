! function(e) {
    "undefined" != typeof exports ? e(exports) : (window.hljs = e({}), "function" == typeof define && define.amd && define("hljs", [], function() {
        return window.hljs
    }))
}(function(e) {
    function r(e) {
        return e.replace(/&/gm, "&amp;").replace(/</gm, "&lt;").replace(/>/gm, "&gt;")
    }

    function t(e) {
        return e.nodeName.toLowerCase()
    }

    function n(e, r) {
        var t = e && e.exec(r);
        return t && 0 == t.index
    }

    function a(e) {
        return /^(no-?highlight|plain|text)$/i.test(e)
    }

    function c(e) {
        var r, t, n, c = e.className + " ";
        if (c += e.parentNode ? e.parentNode.className : "", t = /\blang(?:uage)?-([\w-]+)\b/i.exec(c)) return w(t[1]) ? t[1] : "no-highlight";
        for (c = c.split(/\s+/), r = 0, n = c.length; n > r; r++)
            if (w(c[r]) || a(c[r])) return c[r]
    }

    function i(e, r) {
        var t, n = {};
        for (t in e) n[t] = e[t];
        if (r)
            for (t in r) n[t] = r[t];
        return n
    }

    function s(e) {
        var r = [];
        return function n(e, a) {
            for (var c = e.firstChild; c; c = c.nextSibling) 3 == c.nodeType ? a += c.nodeValue.length : 1 == c.nodeType && (r.push({
                event: "start",
                offset: a,
                node: c
            }), a = n(c, a), t(c).match(/br|hr|img|input/) || r.push({
                event: "stop",
                offset: a,
                node: c
            }));
            return a
        }(e, 0), r
    }

    function o(e, n, a) {
        function c() {
            return e.length && n.length ? e[0].offset != n[0].offset ? e[0].offset < n[0].offset ? e : n : "start" == n[0].event ? e : n : e.length ? e : n
        }

        function i(e) {
            function n(e) {
                return " " + e.nodeName + '="' + r(e.value) + '"'
            }
            u += "<" + t(e) + Array.prototype.map.call(e.attributes, n).join("") + ">"
        }

        function s(e) {
            u += "</" + t(e) + ">"
        }

        function o(e) {
            ("start" == e.event ? i : s)(e.node)
        }
        for (var l = 0, u = "", b = []; e.length || n.length;) {
            var f = c();
            if (u += r(a.substr(l, f[0].offset - l)), l = f[0].offset, f == e) {
                b.reverse().forEach(s);
                do o(f.splice(0, 1)[0]), f = c(); while (f == e && f.length && f[0].offset == l);
                b.reverse().forEach(i)
            } else "start" == f[0].event ? b.push(f[0].node) : b.pop(), o(f.splice(0, 1)[0])
        }
        return u + r(a.substr(l))
    }

    function l(e) {
        function r(e) {
            return e && e.source || e
        }

        function t(t, n) {
            return new RegExp(r(t), "m" + (e.cI ? "i" : "") + (n ? "g" : ""))
        }

        function n(a, c) {
            if (!a.compiled) {
                if (a.compiled = !0, a.k = a.k || a.bK, a.k) {
                    var s = {},
                        o = function(r, t) {
                            e.cI && (t = t.toLowerCase()), t.split(" ").forEach(function(e) {
                                var t = e.split("|");
                                s[t[0]] = [r, t[1] ? Number(t[1]) : 1]
                            })
                        };
                    "string" == typeof a.k ? o("keyword", a.k) : Object.keys(a.k).forEach(function(e) {
                        o(e, a.k[e])
                    }), a.k = s
                }
                a.lR = t(a.l || /\b\w+\b/, !0), c && (a.bK && (a.b = "\\b(" + a.bK.split(" ").join("|") + ")\\b"), a.b || (a.b = /\B|\b/), a.bR = t(a.b), a.e || a.eW || (a.e = /\B|\b/), a.e && (a.eR = t(a.e)), a.tE = r(a.e) || "", a.eW && c.tE && (a.tE += (a.e ? "|" : "") + c.tE)), a.i && (a.iR = t(a.i)), void 0 === a.r && (a.r = 1), a.c || (a.c = []);
                var l = [];
                a.c.forEach(function(e) {
                    e.v ? e.v.forEach(function(r) {
                        l.push(i(e, r))
                    }) : l.push("self" == e ? a : e)
                }), a.c = l, a.c.forEach(function(e) {
                    n(e, a)
                }), a.starts && n(a.starts, c);
                var u = a.c.map(function(e) {
                    return e.bK ? "\\.?(" + e.b + ")\\.?" : e.b
                }).concat([a.tE, a.i]).map(r).filter(Boolean);
                a.t = u.length ? t(u.join("|"), !0) : {
                    exec: function() {
                        return null
                    }
                }
            }
        }
        n(e)
    }

    function u(e, t, a, c) {
        function i(e, r) {
            for (var t = 0; t < r.c.length; t++)
                if (n(r.c[t].bR, e)) return r.c[t]
        }

        function s(e, r) {
            if (n(e.eR, r)) {
                for (; e.endsParent && e.parent;) e = e.parent;
                return e
            }
            return e.eW ? s(e.parent, r) : void 0
        }

        function o(e, r) {
            return !a && n(r.iR, e)
        }

        function f(e, r) {
            var t = v.cI ? r[0].toLowerCase() : r[0];
            return e.k.hasOwnProperty(t) && e.k[t]
        }

        function p(e, r, t, n) {
            var a = n ? "" : E.classPrefix,
                c = '<span class="' + a,
                i = t ? "" : "</span>";
            return c += e + '">', c + r + i
        }

        function d() {
            if (!M.k) return r(R);
            var e = "",
                t = 0;
            M.lR.lastIndex = 0;
            for (var n = M.lR.exec(R); n;) {
                e += r(R.substr(t, n.index - t));
                var a = f(M, n);
                a ? (B += a[1], e += p(a[0], r(n[0]))) : e += r(n[0]), t = M.lR.lastIndex, n = M.lR.exec(R)
            }
            return e + r(R.substr(t))
        }

        function g() {
            var e = "string" == typeof M.sL;
            if (e && !y[M.sL]) return r(R);
            var t = e ? u(M.sL, R, !0, k[M.sL]) : b(R, M.sL.length ? M.sL : void 0);
            return M.r > 0 && (B += t.r), e && (k[M.sL] = t.top), p(t.language, t.value, !1, !0)
        }

        function h() {
            return void 0 !== M.sL ? g() : d()
        }

        function N(e, t) {
            var n = e.cN ? p(e.cN, "", !0) : "";
            e.rB ? (C += n, R = "") : e.eB ? (C += r(t) + n, R = "") : (C += n, R = t), M = Object.create(e, {
                parent: {
                    value: M
                }
            })
        }

        function m(e, t) {
            if (R += e, void 0 === t) return C += h(), 0;
            var n = i(t, M);
            if (n) return C += h(), N(n, t), n.rB ? 0 : t.length;
            var a = s(M, t);
            if (a) {
                var c = M;
                c.rE || c.eE || (R += t), C += h();
                do M.cN && (C += "</span>"), B += M.r, M = M.parent; while (M != a.parent);
                return c.eE && (C += r(t)), R = "", a.starts && N(a.starts, ""), c.rE ? 0 : t.length
            }
            if (o(t, M)) throw new Error('Illegal lexeme "' + t + '" for mode "' + (M.cN || "<unnamed>") + '"');
            return R += t, t.length || 1
        }
        var v = w(e);
        if (!v) throw new Error('Unknown language: "' + e + '"');
        l(v);
        var x, M = c || v,
            k = {},
            C = "";
        for (x = M; x != v; x = x.parent) x.cN && (C = p(x.cN, "", !0) + C);
        var R = "",
            B = 0;
        try {
            for (var _, A, L = 0; M.t.lastIndex = L, _ = M.t.exec(t), _;) A = m(t.substr(L, _.index - L), _[0]), L = _.index + A;
            for (m(t.substr(L)), x = M; x.parent; x = x.parent) x.cN && (C += "</span>");
            return {
                r: B,
                value: C,
                language: e,
                top: M
            }
        } catch (S) {
            if (-1 != S.message.indexOf("Illegal")) return {
                r: 0,
                value: r(t)
            };
            throw S
        }
    }

    function b(e, t) {
        t = t || E.languages || Object.keys(y);
        var n = {
                r: 0,
                value: r(e)
            },
            a = n;
        return t.forEach(function(r) {
            if (w(r)) {
                var t = u(r, e, !1);
                t.language = r, t.r > a.r && (a = t), t.r > n.r && (a = n, n = t)
            }
        }), a.language && (n.second_best = a), n
    }

    function f(e) {
        return E.tabReplace && (e = e.replace(/^((<[^>]+>|\t)+)/gm, function(e, r) {
            return r.replace(/\t/g, E.tabReplace)
        })), E.useBR && (e = e.replace(/\n/g, "<br>")), e
    }

    function p(e, r, t) {
        var n = r ? x[r] : t,
            a = [e.trim()];
        return e.match(/\bhljs\b/) || a.push("hljs"), -1 === e.indexOf(n) && a.push(n), a.join(" ").trim()
    }

    function d(e) {
        var r = c(e);
        if (!a(r)) {
            var t;
            E.useBR ? (t = document.createElementNS("http://www.w3.org/1999/xhtml", "div"), t.innerHTML = e.innerHTML.replace(/\n/g, "").replace(/<br[ \/]*>/g, "\n")) : t = e;
            var n = t.textContent,
                i = r ? u(r, n, !0) : b(n),
                l = s(t);
            if (l.length) {
                var d = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
                d.innerHTML = i.value, i.value = o(l, s(d), n)
            }
            i.value = f(i.value), e.innerHTML = i.value, e.className = p(e.className, r, i.language), e.result = {
                language: i.language,
                re: i.r
            }, i.second_best && (e.second_best = {
                language: i.second_best.language,
                re: i.second_best.r
            })
        }
    }

    function g(e) {
        E = i(E, e)
    }

    function h() {
        if (!h.called) {
            h.called = !0;
            var e = document.querySelectorAll("pre code");
            Array.prototype.forEach.call(e, d)
        }
    }

    function N() {
        addEventListener("DOMContentLoaded", h, !1), addEventListener("load", h, !1)
    }

    function m(r, t) {
        var n = y[r] = t(e);
        n.aliases && n.aliases.forEach(function(e) {
            x[e] = r
        })
    }

    function v() {
        return Object.keys(y)
    }

    function w(e) {
        return e = e.toLowerCase(), y[e] || y[x[e]]
    }
    var E = {
            classPrefix: "hljs-",
            tabReplace: null,
            useBR: !1,
            languages: void 0
        },
        y = {},
        x = {};
    return e.highlight = u, e.highlightAuto = b, e.fixMarkup = f, e.highlightBlock = d, e.configure = g, e.initHighlighting = h, e.initHighlightingOnLoad = N, e.registerLanguage = m, e.listLanguages = v, e.getLanguage = w, e.inherit = i, e.IR = "[a-zA-Z]\\w*", e.UIR = "[a-zA-Z_]\\w*", e.NR = "\\b\\d+(\\.\\d+)?", e.CNR = "(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)", e.BNR = "\\b(0b[01]+)", e.RSR = "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~", e.BE = {
        b: "\\\\[\\s\\S]",
        r: 0
    }, e.ASM = {
        cN: "string",
        b: "'",
        e: "'",
        i: "\\n",
        c: [e.BE]
    }, e.QSM = {
        cN: "string",
        b: '"',
        e: '"',
        i: "\\n",
        c: [e.BE]
    }, e.PWM = {
        b: /\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such)\b/
    }, e.C = function(r, t, n) {
        var a = e.inherit({
            cN: "comment",
            b: r,
            e: t,
            c: []
        }, n || {});
        return a.c.push(e.PWM), a.c.push({
            cN: "doctag",
            b: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            r: 0
        }), a
    }, e.CLCM = e.C("//", "$"), e.CBCM = e.C("/\\*", "\\*/"), e.HCM = e.C("#", "$"), e.NM = {
        cN: "number",
        b: e.NR,
        r: 0
    }, e.CNM = {
        cN: "number",
        b: e.CNR,
        r: 0
    }, e.BNM = {
        cN: "number",
        b: e.BNR,
        r: 0
    }, e.CSSNM = {
        cN: "number",
        b: e.NR + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
        r: 0
    }, e.RM = {
        cN: "regexp",
        b: /\//,
        e: /\/[gimuy]*/,
        i: /\n/,
        c: [e.BE, {
            b: /\[/,
            e: /\]/,
            r: 0,
            c: [e.BE]
        }]
    }, e.TM = {
        cN: "title",
        b: e.IR,
        r: 0
    }, e.UTM = {
        cN: "title",
        b: e.UIR,
        r: 0
    }, e
}), hljs.registerLanguage("javascript", function(e) {
    return {
        aliases: ["js"],
        k: {
            keyword: "in of if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await",
            literal: "true false null undefined NaN Infinity",
            built_in: "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Promise"
        },
        c: [{
            cN: "pi",
            r: 10,
            b: /^\s*['"]use (strict|asm)['"]/
        }, e.ASM, e.QSM, {
            cN: "string",
            b: "`",
            e: "`",
            c: [e.BE, {
                cN: "subst",
                b: "\\$\\{",
                e: "\\}"
            }]
        }, e.CLCM, e.CBCM, {
            cN: "number",
            v: [{
                b: "\\b(0[bB][01]+)"
            }, {
                b: "\\b(0[oO][0-7]+)"
            }, {
                b: e.CNR
            }],
            r: 0
        }, {
            b: "(" + e.RSR + "|\\b(case|return|throw)\\b)\\s*",
            k: "return throw case",
            c: [e.CLCM, e.CBCM, e.RM, {
                b: /</,
                e: />\s*[);\]]/,
                r: 0,
                sL: "xml"
            }],
            r: 0
        }, {
            cN: "function",
            bK: "function",
            e: /\{/,
            eE: !0,
            c: [e.inherit(e.TM, {
                b: /[A-Za-z$_][0-9A-Za-z$_]*/
            }), {
                cN: "params",
                b: /\(/,
                e: /\)/,
                eB: !0,
                eE: !0,
                c: [e.CLCM, e.CBCM]
            }],
            i: /\[|%/
        }, {
            b: /\$[(.]/
        }, {
            b: "\\." + e.IR,
            r: 0
        }, {
            bK: "import",
            e: "[;$]",
            k: "import from as",
            c: [e.ASM, e.QSM]
        }, {
            cN: "class",
            bK: "class",
            e: /[{;=]/,
            eE: !0,
            i: /[:"\[\]]/,
            c: [{
                bK: "extends"
            }, e.UTM]
        }],
        i: /#/
    }
}), hljs.registerLanguage("markdown", function(e) {
    return {
        aliases: ["md", "mkdown", "mkd"],
        c: [{
            cN: "header",
            v: [{
                b: "^#{1,6}",
                e: "$"
            }, {
                b: "^.+?\\n[=-]{2,}$"
            }]
        }, {
            b: "<",
            e: ">",
            sL: "xml",
            r: 0
        }, {
            cN: "bullet",
            b: "^([*+-]|(\\d+\\.))\\s+"
        }, {
            cN: "strong",
            b: "[*_]{2}.+?[*_]{2}"
        }, {
            cN: "emphasis",
            v: [{
                b: "\\*.+?\\*"
            }, {
                b: "_.+?_",
                r: 0
            }]
        }, {
            cN: "blockquote",
            b: "^>\\s+",
            e: "$"
        }, {
            cN: "code",
            v: [{
                b: "`.+?`"
            }, {
                b: "^( {4}|	)",
                e: "$",
                r: 0
            }]
        }, {
            cN: "horizontal_rule",
            b: "^[-\\*]{3,}",
            e: "$"
        }, {
            b: "\\[.+?\\][\\(\\[].*?[\\)\\]]",
            rB: !0,
            c: [{
                cN: "link_label",
                b: "\\[",
                e: "\\]",
                eB: !0,
                rE: !0,
                r: 0
            }, {
                cN: "link_url",
                b: "\\]\\(",
                e: "\\)",
                eB: !0,
                eE: !0
            }, {
                cN: "link_reference",
                b: "\\]\\[",
                e: "\\]",
                eB: !0,
                eE: !0
            }],
            r: 10
        }, {
            b: "^\\[.+\\]:",
            rB: !0,
            c: [{
                cN: "link_reference",
                b: "\\[",
                e: "\\]:",
                eB: !0,
                eE: !0,
                starts: {
                    cN: "link_url",
                    e: "$"
                }
            }]
        }]
    }
}), hljs.registerLanguage("json", function(e) {
    var r = {
            literal: "true false null"
        },
        t = [e.QSM, e.CNM],
        n = {
            cN: "value",
            e: ",",
            eW: !0,
            eE: !0,
            c: t,
            k: r
        },
        a = {
            b: "{",
            e: "}",
            c: [{
                cN: "attribute",
                b: '\\s*"',
                e: '"\\s*:\\s*',
                eB: !0,
                eE: !0,
                c: [e.BE],
                i: "\\n",
                starts: n
            }],
            i: "\\S"
        },
        c = {
            b: "\\[",
            e: "\\]",
            c: [e.inherit(n, {
                cN: null
            })],
            i: "\\S"
        };
    return t.splice(t.length, 0, a, c), {
        c: t,
        k: r,
        i: "\\S"
    }
}), hljs.registerLanguage("bash", function(e) {
    var r = {
            cN: "variable",
            v: [{
                b: /\$[\w\d#@][\w\d_]*/
            }, {
                b: /\$\{(.*?)}/
            }]
        },
        t = {
            cN: "string",
            b: /"/,
            e: /"/,
            c: [e.BE, r, {
                cN: "variable",
                b: /\$\(/,
                e: /\)/,
                c: [e.BE]
            }]
        },
        n = {
            cN: "string",
            b: /'/,
            e: /'/
        };
    return {
        aliases: ["sh", "zsh"],
        l: /-?[a-z\.]+/,
        k: {
            keyword: "if then else elif fi for while in do done case esac function",
            literal: "true false",
            built_in: "break cd continue eval exec exit export getopts hash pwd readonly return shift test times trap umask unset alias bind builtin caller command declare echo enable help let local logout mapfile printf read readarray source type typeset ulimit unalias set shopt autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate fc fg float functions getcap getln history integer jobs kill limit log noglob popd print pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof zpty zregexparse zsocket zstyle ztcp",
            operator: "-ne -eq -lt -gt -f -d -e -s -l -a"
        },
        c: [{
            cN: "shebang",
            b: /^#![^\n]+sh\s*$/,
            r: 10
        }, {
            cN: "function",
            b: /\w[\w\d_]*\s*\(\s*\)\s*\{/,
            rB: !0,
            c: [e.inherit(e.TM, {
                b: /\w[\w\d_]*/
            })],
            r: 0
        }, e.HCM, e.NM, t, n, r]
    }
}), hljs.registerLanguage("css", function(e) {
    var r = "[a-zA-Z-][a-zA-Z0-9_-]*",
        t = {
            cN: "function",
            b: r + "\\(",
            rB: !0,
            eE: !0,
            e: "\\("
        },
        n = {
            cN: "rule",
            b: /[A-Z\_\.\-]+\s*:/,
            rB: !0,
            e: ";",
            eW: !0,
            c: [{
                cN: "attribute",
                b: /\S/,
                e: ":",
                eE: !0,
                starts: {
                    cN: "value",
                    eW: !0,
                    eE: !0,
                    c: [t, e.CSSNM, e.QSM, e.ASM, e.CBCM, {
                        cN: "hexcolor",
                        b: "#[0-9A-Fa-f]+"
                    }, {
                        cN: "important",
                        b: "!important"
                    }]
                }
            }]
        };
    return {
        cI: !0,
        i: /[=\/|'\$]/,
        c: [e.CBCM, n, {
            cN: "id",
            b: /\#[A-Za-z0-9_-]+/
        }, {
            cN: "class",
            b: /\.[A-Za-z0-9_-]+/
        }, {
            cN: "attr_selector",
            b: /\[/,
            e: /\]/,
            i: "$"
        }, {
            cN: "pseudo",
            b: /:(:)?[a-zA-Z0-9\_\-\+\(\)"']+/
        }, {
            cN: "at_rule",
            b: "@(font-face|page)",
            l: "[a-z-]+",
            k: "font-face page"
        }, {
            cN: "at_rule",
            b: "@",
            e: "[{;]",
            c: [{
                cN: "keyword",
                b: /\S+/
            }, {
                b: /\s/,
                eW: !0,
                eE: !0,
                r: 0,
                c: [t, e.ASM, e.QSM, e.CSSNM]
            }]
        }, {
            cN: "tag",
            b: r,
            r: 0
        }, {
            cN: "rules",
            b: "{",
            e: "}",
            i: /\S/,
            c: [e.CBCM, n]
        }]
    }
}), hljs.registerLanguage("ruby", function(e) {
    var r = "[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?",
        t = "and false then defined module in return redo if BEGIN retry end for true self when next until do begin unless END rescue nil else break undef not super class case require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor",
        n = {
            cN: "doctag",
            b: "@[A-Za-z]+"
        },
        a = {
            cN: "value",
            b: "#<",
            e: ">"
        },
        c = [e.C("#", "$", {
            c: [n]
        }), e.C("^\\=begin", "^\\=end", {
            c: [n],
            r: 10
        }), e.C("^__END__", "\\n$")],
        i = {
            cN: "subst",
            b: "#\\{",
            e: "}",
            k: t
        },
        s = {
            cN: "string",
            c: [e.BE, i],
            v: [{
                b: /'/,
                e: /'/
            }, {
                b: /"/,
                e: /"/
            }, {
                b: /`/,
                e: /`/
            }, {
                b: "%[qQwWx]?\\(",
                e: "\\)"
            }, {
                b: "%[qQwWx]?\\[",
                e: "\\]"
            }, {
                b: "%[qQwWx]?{",
                e: "}"
            }, {
                b: "%[qQwWx]?<",
                e: ">"
            }, {
                b: "%[qQwWx]?/",
                e: "/"
            }, {
                b: "%[qQwWx]?%",
                e: "%"
            }, {
                b: "%[qQwWx]?-",
                e: "-"
            }, {
                b: "%[qQwWx]?\\|",
                e: "\\|"
            }, {
                b: /\B\?(\\\d{1,3}|\\x[A-Fa-f0-9]{1,2}|\\u[A-Fa-f0-9]{4}|\\?\S)\b/
            }]
        },
        o = {
            cN: "params",
            b: "\\(",
            e: "\\)",
            k: t
        },
        l = [s, a, {
            cN: "class",
            bK: "class module",
            e: "$|;",
            i: /=/,
            c: [e.inherit(e.TM, {
                b: "[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?"
            }), {
                cN: "inheritance",
                b: "<\\s*",
                c: [{
                    cN: "parent",
                    b: "(" + e.IR + "::)?" + e.IR
                }]
            }].concat(c)
        }, {
            cN: "function",
            bK: "def",
            e: "$|;",
            c: [e.inherit(e.TM, {
                b: r
            }), o].concat(c)
        }, {
            cN: "constant",
            b: "(::)?(\\b[A-Z]\\w*(::)?)+",
            r: 0
        }, {
            cN: "symbol",
            b: e.UIR + "(\\!|\\?)?:",
            r: 0
        }, {
            cN: "symbol",
            b: ":",
            c: [s, {
                b: r
            }],
            r: 0
        }, {
            cN: "number",
            b: "(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",
            r: 0
        }, {
            cN: "variable",
            b: "(\\$\\W)|((\\$|\\@\\@?)(\\w+))"
        }, {
            b: "(" + e.RSR + ")\\s*",
            c: [a, {
                cN: "regexp",
                c: [e.BE, i],
                i: /\n/,
                v: [{
                    b: "/",
                    e: "/[a-z]*"
                }, {
                    b: "%r{",
                    e: "}[a-z]*"
                }, {
                    b: "%r\\(",
                    e: "\\)[a-z]*"
                }, {
                    b: "%r!",
                    e: "![a-z]*"
                }, {
                    b: "%r\\[",
                    e: "\\][a-z]*"
                }]
            }].concat(c),
            r: 0
        }].concat(c);
    i.c = l, o.c = l;
    var u = "[>?]>",
        b = "[\\w#]+\\(\\w+\\):\\d+:\\d+>",
        f = "(\\w+-)?\\d+\\.\\d+\\.\\d(p\\d+)?[^>]+>",
        p = [{
            b: /^\s*=>/,
            cN: "status",
            starts: {
                e: "$",
                c: l
            }
        }, {
            cN: "prompt",
            b: "^(" + u + "|" + b + "|" + f + ")",
            starts: {
                e: "$",
                c: l
            }
        }];
    return {
        aliases: ["rb", "gemspec", "podspec", "thor", "irb"],
        k: t,
        c: c.concat(p).concat(l)
    }
}), hljs.registerLanguage("xml", function(e) {
    var r = "[A-Za-z0-9\\._:-]+",
        t = {
            b: /<\?(php)?(?!\w)/,
            e: /\?>/,
            sL: "php"
        },
        n = {
            eW: !0,
            i: /</,
            r: 0,
            c: [t, {
                cN: "attribute",
                b: r,
                r: 0
            }, {
                b: "=",
                r: 0,
                c: [{
                    cN: "value",
                    c: [t],
                    v: [{
                        b: /"/,
                        e: /"/
                    }, {
                        b: /'/,
                        e: /'/
                    }, {
                        b: /[^\s\/>]+/
                    }]
                }]
            }]
        };
    return {
        aliases: ["html", "xhtml", "rss", "atom", "xsl", "plist"],
        cI: !0,
        c: [{
            cN: "doctype",
            b: "<!DOCTYPE",
            e: ">",
            r: 10,
            c: [{
                b: "\\[",
                e: "\\]"
            }]
        }, e.C("<!--", "-->", {
            r: 10
        }), {
            cN: "cdata",
            b: "<\\!\\[CDATA\\[",
            e: "\\]\\]>",
            r: 10
        }, {
            cN: "tag",
            b: "<style(?=\\s|>|$)",
            e: ">",
            k: {
                title: "style"
            },
            c: [n],
            starts: {
                e: "</style>",
                rE: !0,
                sL: "css"
            }
        }, {
            cN: "tag",
            b: "<script(?=\\s|>|$)",
            e: ">",
            k: {
                title: "script"
            },
            c: [n],
            starts: {
                e: "</script>",
                rE: !0,
                sL: ["actionscript", "javascript", "handlebars"]
            }
        }, t, {
            cN: "pi",
            b: /<\?\w+/,
            e: /\?>/,
            r: 10
        }, {
            cN: "tag",
            b: "</?",
            e: "/?>",
            c: [{
                cN: "title",
                b: /[^ \/><\n\t]+/,
                r: 0
            }, n]
        }]
    }
});
hljs.initHighlightingOnLoad();
